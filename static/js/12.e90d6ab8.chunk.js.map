{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","components/ToDashboardButton/ToDashboardButton.tsx","components/ToDashboardButton/ToDashboardButton.module.css","../node_modules/@material-ui/core/esm/utils/useControlled.js","components/RejoinRunningGameHint/RejoinRunningGameHint.tsx","components/RejoinRunningGameHint/RejoinRunningGameHint.module.css","../node_modules/@material-ui/icons/DirectionsWalk.js","containers/JoinGame/JoinGame.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","ToDashboardButton","className","styles","button_wrapper","type","color","variant","size","startIcon","onClick","onReturnToDashboard","module","exports","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","undefined","current","_React$useState","valueState","setValue","newValue","RejoinRunningGameHintContext","RejoinRunningGameHint","condition","context","hintText","hint_text","component","RouterLink","to","link","_interopRequireDefault","require","Object","defineProperty","value","_react","_default","d","JoinGame","idInput","nameInput","playerInfo","validateInputs","handleInputChange","event","target","setState","handleSubmit","preventDefault","trim","joinGame","idCreationTimestamp","playerIdCreationTimestamp","removeAllDataOfRunningGameFromLocalStorage","setPlayerInfoInLocalStorage","id","setRunningGameInfoInLocalStorage","gameId","convertDateToUnixTimestamp","Date","isPlayerAdmin","onSetGameData","gameConfig","isRejoiningGame","isAdmin","history","push","returnToDashboard","joinGameForm","onSubmit","this","noValidate","autoComplete","label","fullWidth","required","autoFocus","error","inputProps","onChange","joingame","isH3","showDivider","text","query","URLSearchParams","location","search","has","get","prevProps","connect","dispatch","payload","setDataForNewGame"],"mappings":"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","file":"static/js/12.e90d6ab8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import { Button } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport React from 'react';\r\nimport styles from './ToDashboardButton.module.css';\r\n\r\ninterface ToDashboardButtonProps {\r\n    onReturnToDashboard: () => any;\r\n}\r\n\r\nconst ToDashboardButton: React.FunctionComponent<ToDashboardButtonProps> = props => {\r\n    return (\r\n        <div className={styles.button_wrapper}>\r\n            <Button\r\n                type=\"button\"\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                startIcon={<ExitToAppIcon />}\r\n                onClick={props.onReturnToDashboard}\r\n            >Dashboard</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDashboardButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_wrapper\":\"ToDashboardButton_button_wrapper__1EtAB\"};","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import { Link } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport styles from './RejoinRunningGameHint.module.css';\r\n\r\nexport enum RejoinRunningGameHintContext {\r\n    newgame = 'newgame',\r\n    joingame = 'joingame'\r\n}\r\n\r\ninterface RejoinRunningGameHintProps {\r\n    context: RejoinRunningGameHintContext;\r\n}\r\nexport const RejoinRunningGameHint: React.FunctionComponent<RejoinRunningGameHintProps> = props => {\r\n    const condition = props.context === 'newgame' ? 'ein neues Spiel erstellst' : 'einem anderen Spiel beitrittst';\r\n    const hintText = `Du nimmst bereits an einem laufenden Spiel teil. Wenn du ${condition},\r\n    kannst du nicht mehr in das alte Spiel zur√ºckkehren!`;\r\n\r\n    return (\r\n        <div className=\"material-card-style\">\r\n            <p className={styles.hint_text}>\r\n                <span className=\"rejoin-running-game-hint-highlighted\">Achtung: </span>\r\n                {hintText}\r\n            </p>\r\n            <Link component={RouterLink} to=\"/play\" className={styles.link}>‚áí Zur√ºck ins laufende Spiel</Link>\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint_text\":\"RejoinRunningGameHint_hint_text__24Gb_\",\"link\":\"RejoinRunningGameHint_link__2heEh\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM9.8 8.9L7 23h2.1l1.8-8 2.1 2v6h2v-7.5l-2.1-2 .6-3C14.8 12 16.8 13 19 13v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1L6 8.3V13h2V9.6l1.8-.7\"\n}), 'DirectionsWalk');\n\nexports.default = _default;","import { Button, TextField } from '@material-ui/core';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport React, { ChangeEvent, Component, Dispatch, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport {\r\n    RejoinRunningGameHint,\r\n    RejoinRunningGameHintContext,\r\n} from '../../components/RejoinRunningGameHint/RejoinRunningGameHint';\r\nimport { SectionHeader } from '../../components/SectionHeader/SectionHeader';\r\nimport ToDashboardButton from '../../components/ToDashboardButton/ToDashboardButton';\r\nimport { PlayerInfo } from '../../models/player.interface';\r\nimport { AppAction, setDataForNewGame, SetDataForNewGamePayload } from '../../store/app.actions';\r\nimport { AppState } from '../../store/app.reducer';\r\nimport { convertDateToUnixTimestamp } from '../../utils/general.utils';\r\nimport {\r\n    removeAllDataOfRunningGameFromLocalStorage,\r\n    setPlayerInfoInLocalStorage,\r\n    setRunningGameInfoInLocalStorage,\r\n} from '../../utils/local-storage.utils';\r\n\r\ninterface JoinGamePropsFromStore {\r\n    gameId: string | null;\r\n    playerIdCreationTimestamp: number;\r\n    playerInfo: PlayerInfo | null;\r\n}\r\ninterface JoinGameDispatchProps {\r\n    onSetGameData: (payload: SetDataForNewGamePayload) => void\r\n}\r\ninterface JoinGameProps extends JoinGamePropsFromStore, JoinGameDispatchProps, RouteComponentProps { }\r\ninterface JoinGameState {\r\n    idInput: string;\r\n    nameInput: string;\r\n    validateInputs: boolean;\r\n}\r\n\r\nclass JoinGame extends Component<JoinGameProps, JoinGameState> {\r\n    public state: JoinGameState = {\r\n        idInput: '',\r\n        nameInput: this.props.playerInfo ? this.props.playerInfo.name : '',\r\n        validateInputs: false\r\n    };\r\n\r\n    public render() {\r\n        const joinGameForm = (\r\n            <form onSubmit={this.handleSubmit} className=\"app-form\" noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    name=\"nameInput\"\r\n                    label=\"Spielername (max. 20 Zeichen)\"\r\n                    value={this.state.nameInput}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    autoFocus\r\n                    error={this.state.validateInputs && !this.state.nameInput}\r\n                    inputProps={{ 'maxLength': '20' }}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <TextField\r\n                    name=\"idInput\"\r\n                    label=\"Spiel-ID\"\r\n                    value={this.state.idInput}\r\n                    onChange={this.handleInputChange}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    error={this.state.validateInputs && !this.state.idInput}\r\n                />\r\n                <div className=\"button-wrapper\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        startIcon={<DirectionsWalkIcon />}\r\n                    >Beitreten</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n        return (\r\n            <div className=\"main-content-wrapper\">\r\n                {this.props.gameId ? <RejoinRunningGameHint context={RejoinRunningGameHintContext.joingame} /> : null}\r\n                <div className=\"material-card-style\">\r\n                    <SectionHeader isH3={false} showDivider={true} text=\"Spiel beitreten\"></SectionHeader>\r\n                    {joinGameForm}\r\n                </div>\r\n                <ToDashboardButton onReturnToDashboard={this.returnToDashboard} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        if (query.has('id')) {\r\n            this.setState({ idInput: query.get('id') as string });\r\n        }\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: JoinGameProps) {\r\n        if (this.props.playerInfo && this.props.playerInfo !== prevProps.playerInfo) {\r\n            this.setState({ nameInput: this.props.playerInfo.name });\r\n        }\r\n    }\r\n\r\n    private handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value } as any);\r\n    }\r\n\r\n    private handleSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        if (this.state.idInput && this.state.nameInput.trim()) {\r\n            this.joinGame();\r\n        } else {\r\n            this.setState({ nameInput: this.state.nameInput.trim(), validateInputs: true });\r\n        }\r\n    }\r\n\r\n    private joinGame = () => {\r\n        const playerInfo = this.props.playerInfo as PlayerInfo;\r\n        const idCreationTimestamp = this.props.playerIdCreationTimestamp;\r\n        const { idInput, nameInput } = this.state;\r\n        removeAllDataOfRunningGameFromLocalStorage();\r\n        setPlayerInfoInLocalStorage({ id: playerInfo.id, idCreationTimestamp, name: nameInput.trim() });\r\n        setRunningGameInfoInLocalStorage({ gameId: idInput, idCreationTimestamp: convertDateToUnixTimestamp(new Date()), isPlayerAdmin: false });\r\n        this.props.onSetGameData({\r\n            gameConfig: null,\r\n            gameId: idInput,\r\n            isRejoiningGame: false,\r\n            playerInfo: {\r\n                id: playerInfo.id,\r\n                isAdmin: false,\r\n                name: nameInput.trim()\r\n            }\r\n        });\r\n        this.props.history.push('/play');\r\n    }\r\n\r\n    private returnToDashboard = () => {\r\n        this.props.history.push('/');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): JoinGamePropsFromStore => {\r\n    return {\r\n        gameId: state.gameId,\r\n        playerIdCreationTimestamp: state.playerIdCreationTimestamp,\r\n        playerInfo: state.playerInfo\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch<AppAction>): JoinGameDispatchProps => {\r\n    return {\r\n        onSetGameData: (payload: SetDataForNewGamePayload) => dispatch(setDataForNewGame(payload))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinGame);\r\n"],"sourceRoot":""}