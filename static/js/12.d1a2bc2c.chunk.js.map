{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","components/ToDashboardButton/ToDashboardButton.tsx","components/ToDashboardButton/ToDashboardButton.module.css","../node_modules/@material-ui/core/esm/utils/useControlled.js","constants/text.constant.ts","components/RejoinRunningGameHint/RejoinRunningGameHint.tsx","components/RejoinRunningGameHint/RejoinRunningGameHint.module.css","../node_modules/@material-ui/icons/DirectionsWalk.js","containers/JoinGame/JoinGame.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","React","createElement","SvgIcon","_extends","muiName","memo","forwardRef","ToDashboardButton","className","styles","button_wrapper","type","color","variant","size","startIcon","onClick","onReturnToDashboard","module","exports","useControlled","_ref","controlled","defaultProp","default","isControlled","name","state","undefined","current","_React$useState","valueState","setValue","newValue","GAME_ID_LABEL","NUMBER_OF_CATEGORIES_LABEL","NUMBER_OF_ROUNDS_LABEL","PLAYER_NAME_LABEL","RejoinRunningGameHintContext","RejoinRunningGameHint","condition","context","hintText","hint_text","component","RouterLink","to","link","_interopRequireDefault","require","Object","defineProperty","value","_react","_default","d","JoinGame","idInput","nameInput","playerInfo","validateInputs","handleInputChange","event","target","setState","handleSubmit","preventDefault","trim","joinGame","idCreationTimestamp","playerIdCreationTimestamp","removeAllDataOfRunningGameFromLocalStorage","setPlayerInfoInLocalStorage","id","setRunningGameInfoInLocalStorage","gameId","convertDateToUnixTimestamp","Date","isPlayerAdmin","onSetGameData","gameConfig","isRejoiningGame","isAdmin","history","push","returnToDashboard","playerNameAriaLabel","PLAYER_NAME_MAX_LENGTH","playerNameVisibleLabel","joinGameForm","onSubmit","this","noValidate","autoComplete","htmlFor","label","fullWidth","required","autoFocus","error","inputProps","onChange","joingame","text","query","URLSearchParams","location","search","has","get","prevProps","connect","dispatch","payload","setDataForNewGame"],"mappings":"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","file":"static/js/12.d1a2bc2c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import { Button } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport React from 'react';\r\nimport styles from './ToDashboardButton.module.css';\r\n\r\ninterface ToDashboardButtonProps {\r\n    onReturnToDashboard: () => any;\r\n}\r\n\r\nconst ToDashboardButton: React.FunctionComponent<ToDashboardButtonProps> = props => {\r\n    return (\r\n        <div className={styles.button_wrapper}>\r\n            <Button\r\n                type=\"button\"\r\n                color=\"default\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                startIcon={<ExitToAppIcon />}\r\n                onClick={props.onReturnToDashboard}\r\n            >Dashboard</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDashboardButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_wrapper\":\"ToDashboardButton_button_wrapper__1EtAB\"};","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","export const GAME_ID_LABEL = 'Spiel-ID';\r\nexport const NUMBER_OF_CATEGORIES_LABEL = 'Anzahl Kategorien';\r\nexport const NUMBER_OF_ROUNDS_LABEL = 'Anzahl Runden';\r\nexport const PLAYER_NAME_LABEL = 'Spielername';\r\n","import { Link } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport styles from './RejoinRunningGameHint.module.css';\r\n\r\nexport enum RejoinRunningGameHintContext {\r\n    newgame = 'newgame',\r\n    joingame = 'joingame'\r\n}\r\n\r\ninterface RejoinRunningGameHintProps {\r\n    context: RejoinRunningGameHintContext;\r\n}\r\nexport const RejoinRunningGameHint: React.FunctionComponent<RejoinRunningGameHintProps> = props => {\r\n    const condition = props.context === 'newgame' ? 'ein neues Spiel erstellst' : 'einem anderen Spiel beitrittst';\r\n    const hintText = `Du nimmst bereits an einem laufenden Spiel teil. Wenn du ${condition},\r\n    kannst du nicht mehr in das alte Spiel zurückkehren!`;\r\n\r\n    return (\r\n        <div className=\"material-card-style\">\r\n            <p className={styles.hint_text}>\r\n                <span className=\"rejoin-running-game-hint-highlighted\">Achtung: </span>\r\n                {hintText}\r\n            </p>\r\n            <Link component={RouterLink} to=\"/play\" className={styles.link}>⇒ Zurück ins laufende Spiel</Link>\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hint_text\":\"RejoinRunningGameHint_hint_text__24Gb_\",\"link\":\"RejoinRunningGameHint_link__2heEh\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M13.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM9.8 8.9L7 23h2.1l1.8-8 2.1 2v6h2v-7.5l-2.1-2 .6-3C14.8 12 16.8 13 19 13v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1L6 8.3V13h2V9.6l1.8-.7\"\n}), 'DirectionsWalk');\n\nexports.default = _default;","import { Button, TextField } from '@material-ui/core';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport React, { ChangeEvent, Component, Dispatch, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport {\r\n    RejoinRunningGameHint,\r\n    RejoinRunningGameHintContext,\r\n} from '../../components/RejoinRunningGameHint/RejoinRunningGameHint';\r\nimport { SectionHeader } from '../../components/SectionHeader/SectionHeader';\r\nimport ToDashboardButton from '../../components/ToDashboardButton/ToDashboardButton';\r\nimport { PLAYER_NAME_MAX_LENGTH } from '../../constants/app.constant';\r\nimport { GAME_ID_LABEL, PLAYER_NAME_LABEL } from '../../constants/text.constant';\r\nimport { PlayerInfo } from '../../models/player.interface';\r\nimport { AppAction, setDataForNewGame, SetDataForNewGamePayload } from '../../store/app.actions';\r\nimport { AppState } from '../../store/app.reducer';\r\nimport { convertDateToUnixTimestamp } from '../../utils/general.utils';\r\nimport {\r\n    removeAllDataOfRunningGameFromLocalStorage,\r\n    setPlayerInfoInLocalStorage,\r\n    setRunningGameInfoInLocalStorage,\r\n} from '../../utils/local-storage.utils';\r\n\r\ninterface JoinGamePropsFromStore {\r\n    gameId: string | null;\r\n    playerIdCreationTimestamp: number;\r\n    playerInfo: PlayerInfo | null;\r\n}\r\ninterface JoinGameDispatchProps {\r\n    onSetGameData: (payload: SetDataForNewGamePayload) => void\r\n}\r\ninterface JoinGameProps extends JoinGamePropsFromStore, JoinGameDispatchProps, RouteComponentProps { }\r\ninterface JoinGameState {\r\n    idInput: string;\r\n    nameInput: string;\r\n    validateInputs: boolean;\r\n}\r\n\r\nclass JoinGame extends Component<JoinGameProps, JoinGameState> {\r\n    public state: JoinGameState = {\r\n        idInput: '',\r\n        nameInput: this.props.playerInfo ? this.props.playerInfo.name : '',\r\n        validateInputs: false\r\n    };\r\n\r\n    public render() {\r\n        const playerNameAriaLabel = `${PLAYER_NAME_LABEL} (maximal ${PLAYER_NAME_MAX_LENGTH} Zeichen)`;\r\n        const playerNameVisibleLabel = `${PLAYER_NAME_LABEL} (max. ${PLAYER_NAME_MAX_LENGTH} Zeichen)`;\r\n        const joinGameForm = (\r\n            <form onSubmit={this.handleSubmit} className=\"app-form\" noValidate autoComplete=\"off\">\r\n                <label htmlFor=\"player-name-input\" className=\"sr-only\">{playerNameAriaLabel}</label>\r\n                <TextField\r\n                    name=\"nameInput\"\r\n                    label={playerNameVisibleLabel}\r\n                    value={this.state.nameInput}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    autoFocus\r\n                    error={this.state.validateInputs && !this.state.nameInput}\r\n                    inputProps={{ id: 'player-name-input', 'maxLength': PLAYER_NAME_MAX_LENGTH }}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <label htmlFor=\"game-id-input\" className=\"sr-only\">{GAME_ID_LABEL}</label>\r\n                <TextField\r\n                    name=\"idInput\"\r\n                    label={GAME_ID_LABEL}\r\n                    value={this.state.idInput}\r\n                    className=\"app-form-input\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    error={this.state.validateInputs && !this.state.idInput}\r\n                    inputProps={{ id: 'game-id-input' }}\r\n                    onChange={this.handleInputChange}\r\n                />\r\n                <div className=\"button-wrapper\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        startIcon={<DirectionsWalkIcon />}\r\n                    >Beitreten</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n        return (\r\n            <div className=\"main-content-wrapper\">\r\n                {this.props.gameId ? <RejoinRunningGameHint context={RejoinRunningGameHintContext.joingame} /> : null}\r\n                <div className=\"material-card-style\">\r\n                    <SectionHeader text=\"Spiel beitreten\"></SectionHeader>\r\n                    {joinGameForm}\r\n                </div>\r\n                <ToDashboardButton onReturnToDashboard={this.returnToDashboard} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        if (query.has('id')) {\r\n            this.setState({ idInput: query.get('id') as string });\r\n        }\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: JoinGameProps) {\r\n        if (this.props.playerInfo && this.props.playerInfo !== prevProps.playerInfo) {\r\n            this.setState({ nameInput: this.props.playerInfo.name });\r\n        }\r\n    }\r\n\r\n    private handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value } as any);\r\n    }\r\n\r\n    private handleSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        if (this.state.idInput && this.state.nameInput.trim()) {\r\n            this.joinGame();\r\n        } else {\r\n            this.setState({ nameInput: this.state.nameInput.trim(), validateInputs: true });\r\n        }\r\n    }\r\n\r\n    private joinGame = () => {\r\n        const playerInfo = this.props.playerInfo as PlayerInfo;\r\n        const idCreationTimestamp = this.props.playerIdCreationTimestamp;\r\n        const { idInput, nameInput } = this.state;\r\n        removeAllDataOfRunningGameFromLocalStorage();\r\n        setPlayerInfoInLocalStorage({ id: playerInfo.id, idCreationTimestamp, name: nameInput.trim() });\r\n        setRunningGameInfoInLocalStorage({ gameId: idInput, idCreationTimestamp: convertDateToUnixTimestamp(new Date()), isPlayerAdmin: false });\r\n        this.props.onSetGameData({\r\n            gameConfig: null,\r\n            gameId: idInput,\r\n            isRejoiningGame: false,\r\n            playerInfo: {\r\n                id: playerInfo.id,\r\n                isAdmin: false,\r\n                name: nameInput.trim()\r\n            }\r\n        });\r\n        this.props.history.push('/play');\r\n    }\r\n\r\n    private returnToDashboard = () => {\r\n        this.props.history.push('/');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): JoinGamePropsFromStore => {\r\n    return {\r\n        gameId: state.gameId,\r\n        playerIdCreationTimestamp: state.playerIdCreationTimestamp,\r\n        playerInfo: state.playerInfo\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch<AppAction>): JoinGameDispatchProps => {\r\n    return {\r\n        onSetGameData: (payload: SetDataForNewGamePayload) => dispatch(setDataForNewGame(payload))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinGame);\r\n"],"sourceRoot":""}